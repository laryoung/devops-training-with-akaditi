name: CI/CD Pipeline

on:
  push:
    branches: [ master, dev, uat, prod ]
  pull_request:
    branches: [ master, dev ]

env:
  AWS_REGION: eu-central-1
  DOCKER_REGISTRY: 269700396904.dkr.ecr.eu-central-1.amazonaws.com/training-repo
  ECR_REPOSITORY: training-repo

jobs:
  # Build and Push Docker Image
  build-docker-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: devsecops-training-${{ github.run_id }}
        run: |
          # Build a docker container and push it to ECR
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

  # Trivy Vulnerability Scanner
  scan-image:
    runs-on: ubuntu-latest
    needs: build-docker-push
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.login-ecr.outputs.registry }}/training-repo:devsecops-training-${{ github.run_id }}
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Check for vulnerabilities
        run: |
          echo "Checking for critical vulnerabilities..."
          # Trivy will exit with non-zero if critical vulnerabilities are found
          # We'll continue on error to not block the pipeline
        continue-on-error: true

      - name: Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-results.sarif
          retention-days: 30

  # Call Security Scan Workflow (SAST + DAST)
  call-security-scan:
    needs: [build-docker-push, scan-image]
    if: github.ref == 'refs/heads/dev'
    uses: ./.github/workflows/security-scan.yml
    with:
      image_name: devsecops-training-${{ github.run_id }}
      docker_registry: 269700396904.dkr.ecr.eu-central-1.amazonaws.com/training-repo
      aws_region: eu-central-1
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  # Deploy to Development Environment
  deploy_dev:
    needs: [build-docker-push, scan-image, call-security-scan]
    uses: ./.github/workflows/deploy.yml
    with:
      environment: dev
      overlay_path: overlays/dev
      deployment_name: devops-training-deployment
      branch_condition: github.ref == 'refs/heads/master'
      docker_registry: 269700396904.dkr.ecr.eu-central-1.amazonaws.com/training-repo
      image_name: devsecops-training-${{ github.run_id }}
    secrets:
      REPO_TOKEN_PAT: ${{ secrets.REPO_TOKEN_PAT }}

  # Deploy to UAT Environment
  deploy_uat:
    needs: [build-docker-push, scan-image]
    uses: ./.github/workflows/deploy.yml
    with:
      environment: uat
      overlay_path: overlays/uat
      deployment_name: devops-training-deployment
      branch_condition: github.ref == 'refs/heads/master'
      docker_registry: 269700396904.dkr.ecr.eu-central-1.amazonaws.com/training-repo
      image_name: devsecops-training-${{ github.run_id }}
    secrets:
      REPO_TOKEN_PAT: ${{ secrets.REPO_TOKEN_PAT }}

  # Deploy to Production Environment
  deploy_prod:
    needs: [build-docker-push, scan-image]
    uses: ./.github/workflows/deploy.yml
    with:
      environment: prod
      overlay_path: overlays/prod
      deployment_name: devops-training-deployment
      branch_condition: github.ref == 'refs/heads/master'
      docker_registry: 269700396904.dkr.ecr.eu-central-1.amazonaws.com/training-repo
      image_name: devsecops-training-${{ github.run_id }}
    secrets:
      REPO_TOKEN_PAT: ${{ secrets.REPO_TOKEN_PAT }}
